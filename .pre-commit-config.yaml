# This file configures the code-style checks and runs unittests before code changes are git committed and pushed to Github (the file setup.cfg contains additional settings)
# After git cloning this repo please install all requirements in requirements.txt and requirements-dev.txt and then execute "pre-commit install"
# Trigger manual run with: pre-commit run --all-files
# Article that explains this: https://towardsdatascience.com/4-pre-commit-plugins-to-automate-code-reviewing-and-formatting-in-python-c80c6d2e9f5

repos:
  # General Clean-Up
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: check-ast
      - id: check-byte-order-marker
      - id: check-case-conflict
      - id: check-docstring-first
      - id: check-executables-have-shebangs
      - id: check-json
      - id: pretty-format-json
        args: [ '--autofix' ]
      - id: check-toml
      - id: check-xml
      - id: check-yaml
      - id: debug-statements
      - id: detect-private-key
      - id: fix-byte-order-marker
      - id: fix-encoding-pragma
      - id: end-of-file-fixer
      - id: trailing-whitespace
        args: [ --markdown-linebreak-ext=md ]
      - id: mixed-line-ending
      - id: no-commit-to-branch
        args: [ --branch, master, --branch, main ]
  # Finds and removes unused import statements
  - repo: https://github.com/hadialqattan/pycln
    rev: v2.2.2
    hooks:
      - id: pycln
  # Sort imports
  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        name: isort (python)
        args: [ "--profile", "black" ]
  # Add static typing to functions/classes
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.5.1
    hooks:
      - id: mypy
  # Code formatter
  - repo: https://github.com/ambv/black
    rev: 23.9.1
    hooks:
      - id: black
  # Detect violations of style rules
  - repo: https://github.com/PyCQA/flake8
    rev: 6.1.0
    hooks:
      - id: flake8
  # Checks codebase for missing docstrings
  - repo: https://github.com/econchick/interrogate
    rev: 1.5.0
    hooks:
      - id: interrogate
  #  # Analyses the code for for errors and enforces a coding standardwithout actually running it
  #  - repo: https://github.com/pycqa/pylint
  #    rev: "v2.17.5"
  #    hooks:
  #      - id: pylint
  #        exclude: "[a-zA-Z]*/(migrations)/(.)*"
  #        args: [ "--load-plugins=pylint_django", "--django-settings-module=news_platform.settings", "--errors-only" ]
  #        additional_dependencies: [ pylint_django, ]
  # Catch security concerns in the code
  - repo: https://github.com/pycqa/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [ "-iii", "-ll", '-q' ]
  # # Run unittests
  # - repo: local
  #   hooks:
  #     - id: unittests
  #       name: run unit tests
  #       entry: python -m unittest
  #       language: system
  #       pass_filenames: false
  #       args: [ "discover" ]
